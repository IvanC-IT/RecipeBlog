package it.course.myrecipesc4.entity;
// Generated 2 mar 2021, 16:59:05 by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.Getter;
import lombok.Setter;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "myrecipesc4")
public class Category implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private long categoryId;
	private String categoryName;
	private String categoryType;
	
	@Getter @Setter
	@Column(name = "progressive", nullable = false)
	private byte progressive = 0;
	private Set<Tag> tags = new HashSet<Tag>(0);

	public Category() {
	}

	public Category(long categoryId) {
		this.categoryId = categoryId;
	}

	public Category(long categoryId, String categoryName, String categoryType, Set<Tag> tags) {
		this.categoryId = categoryId;
		this.categoryName = categoryName;
		this.categoryType = categoryType;
		this.tags = tags;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "category_id", unique = true, nullable = false)
	public long getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(long categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "category_name", length = 45)
	public String getCategoryName() {
		return this.categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	@Column(name = "category_type", length = 45)
	public String getCategoryType() {
		return this.categoryType;
	}

	public void setCategoryType(String categoryType) {
		this.categoryType = categoryType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Tag> getTags() {
		return this.tags;
	}

	public void setTags(Set<Tag> tags) {
		this.tags = tags;
	}

}
